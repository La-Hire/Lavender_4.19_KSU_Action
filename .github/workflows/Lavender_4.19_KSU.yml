name: Build Lavender 4.19 KSU

on:
  workflow_dispatch:

    inputs:
      KERNEL_SOURCE:
        description: 'Kernel Source'
        required: true
        default: 'xyz-sundram/kernel_xiaomi_sdm660'
      KERNEL_SOURCE_BRANCH:
        description: 'Branch'
        required: true
        default: 'main'
      KERNEL_DEFCONFIG:
        description: 'Defconfig'
        required: true
        default: 'lavender_defconfig'
      KERNEL_FILE:
        description: 'Your kernel out image name'
        required: true
        default: 'Image.gz-dtb'
      AK3_SOURCE:
        description: 'AnyKernel3 Source'
        required: true
        default: 'https://github.com/ImSpiDy/AnyKernel3'

      USE_KERNELSU:
        description: 'Use KernelSU'
        required: true
        default: 'false'
        type: boolean


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
          
    - name: Setup Configuration
      run: |
        echo "KERNEL_SOURCE=${{ github.event.inputs.KERNEL_SOURCE }}" >> $GITHUB_ENV
        echo "KERNEL_SOURCE_BRANCH=${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}" >> $GITHUB_ENV
        echo "KERNEL_DEFCONFIG=${{ github.event.inputs.KERNEL_DEFCONFIG }}" >> $GITHUB_ENV
        echo "KERNEL_FILE=${{ github.event.inputs.KERNEL_FILE }}" >> $GITHUB_ENV
        echo "AK3_SOURCE=${{ github.event.inputs.AK3_SOURCE }}" >> $GITHUB_ENV
        echo "CLANG_URL=${{ github.event.inputs.CLANG_URL }}" >> $GITHUB_ENV
        echo "USE_KPROBES=${{ github.event.inputs.USE_KPROBES }}" >> $GITHUB_ENV
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python

    - name: Download AK3_SOURCE
      run: |
        git clone --depth=1 https://github.com/ImSpiDy/AnyKernel3 AnyKernel3

    - name: Download Clang Toolchain
      run: |
        git clone https://gitlab.com/ThankYouMario/android_prebuilts_clang-standalone -b 16 --depth=1 --no-tags --single-branch clang
        git clone https://github.com/KudProject/prebuilts_gas_linux-x86.git --depth=1 --single-branch --no-tags gcc

    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        github-server-url: 'https://github.com'
        repository: ${{ env.KERNEL_SOURCE }}
        ref: ${{ env.KERNEL_SOURCE_BRANCH }}
        path: project
        submodules: recursive
        fetch-depth: 1
            
    - name: Setup path_umount
      run: |
        cd project
        sed -i "s/CONFIG_LTO_CLANG=y/CONFIG_LTO_CLANG=n/g" arch/arm64/configs/${{ env.KERNEL_DEFCONFIG }} > arch/arm64/configs/${{ env.KERNEL_DEFCONFIG }}
        echo "CONFIG_KALLSYMS_ALL=y" >> arch/arm64/configs/${{ env.KERNEL_DEFCONFIG }}
        echo "CONFIG_DEBUG_KERNEL=y" >> arch/arm64/configs/${{ env.KERNEL_DEFCONFIG }}
        
    - name: Setup KernelSU
      if: env.USE_KERNELSU == 'true'
      run: |
        cd project
        curl -LSs "https://raw.githubusercontent.com/backslashxx/KernelSU/refs/heads/magic/kernel/setup.sh" | bash -
        cd KernelSU
        KSU_VERSION="$(($(git rev-list --count HEAD) + 10200))"
        echo "KSUVer=$KSU_VERSION" >> $GITHUB_ENV
        cd ..
        git add .
        git commit -m ksu
              
    - name: Build kernel
      run: |
        cd project
        export PATH=$GITHUB_WORKSPACE/clang/bin:$GITHUB_WORKSPACE/gcc/bin:$PATH
        export ARCH=arm64
        export SUBARCH=arm64
        export CFLAGS="-mno-outline-atomics"
        export CXXFLAGS="-mno-outline-atomics"
        git config --global user.email "bot@example.com"
        git config --global user.name "bot"
        make O=out CC=clang ARCH=arm64 CFLAGS="-mno-outline-atomics" CXXFLAGS="-mno-outline-atomics"  ${{ env.KERNEL_DEFCONFIG }}
        yes "" | make O=out ARCH=arm64 LLVM=1 LLVM_IAS=1 CFLAGS="-mno-outline-atomics" CXXFLAGS="-mno-outline-atomics" CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_COMPAT=arm-linux-androideabi- AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip
        cp out/arch/arm64/boot/${{ env.KERNEL_FILE }} $GITHUB_WORKSPACE/AnyKernel3
        cd $GITHUB_WORKSPACE/AnyKernel3
    

    
    - name: Upload the kernel zip
      uses: actions/upload-artifact@v4
      with:
        name: Lavender_4.19_${{ env.BUILD_TIME}}
        path: |
          /home/runner/work/My_KSU_Action/My_KSU_Action/project/out/arch/arm64/boot/*
